-- APEXWARE 2.0 - SURVIVE THE KILLER (PT-BR)
-- Interface minimizável com modo bolinha e recursos avançados

local IMGUR_LINK = "https://i.imgur.com/yourimage.png" -- Coloque seu link do Imgur aqui

-- Serviços
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Lighting = game:GetService("Lighting")
local StarterGui = game:GetService("StarterGui")
local TweenService = game:GetService("TweenService")

local lp = Players.LocalPlayer
local cam = workspace.CurrentCamera

-- Variáveis globais
local gui, minimizedBtn, mainFrame
local isMinimized = false
local connections = {}

-- Funções auxiliares
local function findFirstByNames(container, names)
	for _, n in ipairs(names) do
		local obj = container:FindFirstChild(n, true)
		if obj then return obj end
	end
	return nil
end

local function getHRP(p)
	p = p or lp
	local ch = p.Character
	if ch and ch:FindFirstChild("HumanoidRootPart") then
		return ch.HumanoidRootPart
	end
	return nil
end

local function getHumanoid(p)
	p = p or lp
	local ch = p.Character
	if ch then
		return ch:FindFirstChildOfClass("Humanoid")
	end
	return nil
end

local function safeTP(toPart)
	local hrp = getHRP()
	if hrp and toPart and toPart:IsA("BasePart") then
		hrp.CFrame = toPart.CFrame + Vector3.new(0, 3, 0)
	end
end

local function toast(msg, duration)
	duration = duration or 2
	pcall(function()
		StarterGui:SetCore("SendNotification", {
			Title = "APEXWARE 2.0", 
			Text = msg, 
			Duration = duration,
			Icon = IMGUR_LINK
		})
	end)
end

-- Criar GUI
local function createGUI()
	-- GUI principal
	gui = Instance.new("ScreenGui")
	gui.Name = "APEXWARE20_PT"
	gui.ResetOnSpawn = false
	gui.IgnoreGuiInset = true
	gui.Parent = lp:WaitForChild("PlayerGui")
	
	-- Botão minimizado (modo bolinha)
	minimizedBtn = Instance.new("ImageButton")
	minimizedBtn.Name = "MinimizedButton"
	minimizedBtn.Size = UDim2.new(0, 50, 0, 50)
	minimizedBtn.Position = UDim2.new(0, 20, 0.5, -25)
	minimizedBtn.BackgroundColor3 = Color3.fromRGB(45, 160, 95)
	minimizedBtn.Image = IMGUR_LINK
	minimizedBtn.BorderSizePixel = 0
	minimizedBtn.Parent = gui
	
	local btnCorner = Instance.new("UICorner", minimizedBtn)
	btnCorner.CornerRadius = UDim.new(1, 0)
	
	local btnStroke = Instance.new("UIStroke", minimizedBtn)
	btnStroke.Color = Color3.fromRGB(255, 255, 255)
	btnStroke.Thickness = 2
	
	-- Frame principal
	mainFrame = Instance.new("Frame")
	mainFrame.Size = UDim2.new(0, 500, 0, 400)
	mainFrame.Position = UDim2.new(0, 100, 0.5, -200)
	mainFrame.BackgroundColor3 = Color3.fromRGB(24, 24, 28)
	mainFrame.BorderSizePixel = 0
	mainFrame.Visible = false
	mainFrame.Parent = gui
	
	local mainCorner = Instance.new("UICorner", mainFrame)
	mainCorner.CornerRadius = UDim.new(0, 12)
	
	local mainStroke = Instance.new("UIStroke", mainFrame)
	mainStroke.Color = Color3.fromRGB(60, 60, 70)
	mainStroke.Thickness = 2
	
	-- Header
	local header = Instance.new("Frame", mainFrame)
	header.Size = UDim2.new(1, 0, 0, 40)
	header.Position = UDim2.new(0, 0, 0, 0)
	header.BackgroundColor3 = Color3.fromRGB(35, 35, 40)
	header.BorderSizePixel = 0
	
	local headerCorner = Instance.new("UICorner", header)
	headerCorner.CornerRadius = UDim.new(0, 12)
	
	local title = Instance.new("TextLabel", header)
	title.Size = UDim2.new(0.7, 0, 1, 0)
	title.Position = UDim2.new(0, 15, 0, 0)
	title.BackgroundTransparency = 1
	title.Text = "APEXWARE 2.0 - SURVIVE THE KILLER"
	title.Font = Enum.Font.GothamBold
	title.TextSize = 16
	title.TextColor3 = Color3.fromRGB(235, 235, 240)
	title.TextXAlignment = Enum.TextXAlignment.Left
	
	-- Botão de minimizar
	local closeBtn = Instance.new("TextButton", header)
	closeBtn.Size = UDim2.new(0, 30, 0, 30)
	closeBtn.Position = UDim2.new(1, -35, 0.5, -15)
	closeBtn.BackgroundColor3 = Color3.fromRGB(200, 60, 60)
	closeBtn.Text = "X"
	closeBtn.Font = Enum.Font.GothamBold
	closeBtn.TextSize = 14
	closeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
	closeBtn.BorderSizePixel = 0
	
	local closeCorner = Instance.new("UICorner", closeBtn)
	closeCorner.CornerRadius = UDim.new(0, 8)
	
	-- Abas
	local tabs = Instance.new("Frame", mainFrame)
	tabs.Size = UDim2.new(1, -20, 0, 30)
	tabs.Position = UDim2.new(0, 10, 0, 45)
	tabs.BackgroundTransparency = 1
	
	local tabsList = Instance.new("UIListLayout", tabs)
	tabsList.FillDirection = Enum.FillDirection.Horizontal
	tabsList.Padding = UDim.new(0, 5)
	
	local tabNames = {"Principal", "Jogador", "Visual", "Créditos"}
	local tabButtons = {}
	
	for i, name in ipairs(tabNames) do
		local tabBtn = Instance.new("TextButton", tabs)
		tabBtn.Size = UDim2.new(0.2, 0, 1, 0)
		tabBtn.BackgroundColor3 = i == 1 and Color3.fromRGB(45, 160, 95) or Color3.fromRGB(60, 60, 70)
		tabBtn.Text = name
		tabBtn.Font = Enum.Font.Gotham
		tabBtn.TextSize = 14
		tabBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
		tabBtn.BorderSizePixel = 0
		
		local tabCorner = Instance.new("UICorner", tabBtn)
		tabCorner.CornerRadius = UDim.new(0, 6)
		
		tabButtons[name] = tabBtn
	end
	
	-- Conteúdo
	local content = Instance.new("Frame", mainFrame)
	content.Size = UDim2.new(1, -20, 1, -85)
	content.Position = UDim2.new(0, 10, 0, 80)
	content.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
	content.BorderSizePixel = 0
	
	local contentCorner = Instance.new("UICorner", content)
	contentCorner.CornerRadius = UDim.new(0, 10)
	
	local scrollingFrame = Instance.new("ScrollingFrame", content)
	scrollingFrame.Size = UDim2.new(1, -10, 1, -10)
	scrollingFrame.Position = UDim2.new(0, 5, 0, 5)
	scrollingFrame.BackgroundTransparency = 1
	scrollingFrame.BorderSizePixel = 0
	scrollingFrame.ScrollBarThickness = 5
	scrollingFrame.ScrollBarImageColor3 = Color3.fromRGB(100, 100, 110)
	
	local uiListLayout = Instance.new("UIListLayout", scrollingFrame)
	uiListLayout.Padding = UDim.new(0, 10)
	
	-- Funções de controle da UI
	minimizedBtn.MouseButton1Click:Connect(function()
		isMinimized = false
		minimizedBtn.Visible = false
		mainFrame.Visible = true
	end)
	
	closeBtn.MouseButton1Click:Connect(function()
		isMinimized = true
		minimizedBtn.Visible = true
		mainFrame.Visible = false
	end)
	
	-- Arrastar a janela
	local dragging, dragStart, startPos
	header.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			dragStart = input.Position
			startPos = mainFrame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	UserInputService.InputChanged:Connect(function(input)
		if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
			local delta = input.Position - dragStart
			mainFrame.Position = UDim2.new(
				startPos.X.Scale, startPos.X.Offset + delta.X,
				startPos.Y.Scale, startPos.Y.Offset + delta.Y
			)
		end
	end)
	
	return scrollingFrame, tabButtons
end

-- Criar elementos da UI
local function createToggle(name, parent, callback)
	local frame = Instance.new("Frame", parent)
	frame.Size = UDim2.new(1, 0, 0, 40)
	frame.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
	frame.BorderSizePixel = 0
	
	local corner = Instance.new("UICorner", frame)
	corner.CornerRadius = UDim.new(0, 8)
	
	local label = Instance.new("TextLabel", frame)
	label.Size = UDim2.new(0.7, 0, 1, 0)
	label.Position = UDim2.new(0, 10, 0, 0)
	label.BackgroundTransparency = 1
	label.Text = name
	label.Font = Enum.Font.Gotham
	label.TextSize = 14
	label.TextColor3 = Color3.fromRGB(235, 235, 240)
	label.TextXAlignment = Enum.TextXAlignment.Left
	
	local toggle = Instance.new("TextButton", frame)
	toggle.Size = UDim2.new(0, 60, 0, 25)
	toggle.Position = UDim2.new(1, -70, 0.5, -12.5)
	toggle.Text = "OFF"
	toggle.Font = Enum.Font.GothamBold
	toggle.TextSize = 12
	toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
	toggle.BackgroundColor3 = Color3.fromRGB(120, 120, 120)
	toggle.BorderSizePixel = 0
	
	local tCorner = Instance.new("UICorner", toggle)
	tCorner.CornerRadius = UDim.new(0, 12)
	
	local state = false
	toggle.MouseButton1Click:Connect(function()
		state = not state
		toggle.Text = state and "ON" or "OFF"
		toggle.BackgroundColor3 = state and Color3.fromRGB(45, 160, 95) or Color3.fromRGB(120, 120, 120)
		if callback then callback(state) end
	end)
	
	return {
		get = function() return state end,
		set = function(value)
			state = value
			toggle.Text = state and "ON" or "OFF"
			toggle.BackgroundColor3 = state and Color3.fromRGB(45, 160, 95) or Color3.fromRGB(120, 120, 120)
			if callback then callback(state) end
		end
	}
end

local function createButton(name, parent, callback)
	local button = Instance.new("TextButton", parent)
	button.Size = UDim2.new(1, 0, 0, 40)
	button.BackgroundColor3 = Color3.fromRGB(45, 160, 95)
	button.Text = name
	button.Font = Enum.Font.Gotham
	button.TextSize = 14
	button.TextColor3 = Color3.fromRGB(255, 255, 255)
	button.BorderSizePixel = 0
	
	local corner = Instance.new("UICorner", button)
	corner.CornerRadius = UDim.new(0, 8)
	
	button.MouseButton1Click:Connect(function()
		if callback then callback() end
	end)
	
	return button
end

local function createSlider(name, parent, min, max, default, callback)
	local frame = Instance.new("Frame", parent)
	frame.Size = UDim2.new(1, 0, 0, 60)
	frame.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
	frame.BorderSizePixel = 0
	
	local corner = Instance.new("UICorner", frame)
	corner.CornerRadius = UDim.new(0, 8)
	
	local label = Instance.new("TextLabel", frame)
	label.Size = UDim2.new(1, -20, 0, 20)
	label.Position = UDim2.new(0, 10, 0, 5)
	label.BackgroundTransparency = 1
	label.Text = name .. ": " .. default
	label.Font = Enum.Font.Gotham
	label.TextSize = 14
	label.TextColor3 = Color3.fromRGB(235, 235, 240)
	label.TextXAlignment = Enum.TextXAlignment.Left
	
	local slider = Instance.new("Frame", frame)
	slider.Size = UDim2.new(1, -20, 0, 10)
	slider.Position = UDim2.new(0, 10, 0, 35)
	slider.BackgroundColor3 = Color3.fromRGB(70, 70, 80)
	slider.BorderSizePixel = 0
	
	local sCorner = Instance.new("UICorner", slider)
	sCorner.CornerRadius = UDim.new(0, 5)
	
	local fill = Instance.new("Frame", slider)
	fill.Size = UDim2.new((default - min) / (max - min), 0, 1, 0)
	fill.BackgroundColor3 = Color3.fromRGB(45, 160, 95)
	fill.BorderSizePixel = 0
	
	local fCorner = Instance.new("UICorner", fill)
	fCorner.CornerRadius = UDim.new(0, 5)
	
	local value = default
	local dragging = false
	
	slider.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			local x = math.clamp(input.Position.X - slider.AbsolutePosition.X, 0, slider.AbsoluteSize.X)
			value = math.floor(min + (max - min) * (x / slider.AbsoluteSize.X))
			fill.Size = UDim2.new((value - min) / (max - min), 0, 1, 0)
			label.Text = name .. ": " .. value
			if callback then callback(value) end
		end
	end)
	
	UserInputService.InputChanged:Connect(function(input)
		if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
			local x = math.clamp(input.Position.X - slider.AbsolutePosition.X, 0, slider.AbsoluteSize.X)
			value = math.floor(min + (max - min) * (x / slider.AbsoluteSize.X))
			fill.Size = UDim2.new((value - min) / (max - min), 0, 1, 0)
			label.Text = name .. ": " .. value
			if callback then callback(value) end
		end
	end)
	
	UserInputService.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = false
		end
	end)
	
	return {
		get = function() return value end,
		set = function(val)
			value = math.clamp(val, min, max)
			fill.Size = UDim2.new((value - min) / (max - min), 0, 1, 0)
			label.Text = name .. ": " .. value
			if callback then callback(value) end
		end
	}
end

-- Inicializar a UI
local contentFrame, tabs = createGUI()

-- Criar abas e conteúdo
local tabContents = {}
for name, btn in pairs(tabs) do
	tabContents[name] = Instance.new("Frame", contentFrame)
	tabContents[name].Size = UDim2.new(1, 0, 0, 0)
	tabContents[name].BackgroundTransparency = 1
	tabContents[name].Visible = false
	
	btn.MouseButton1Click:Connect(function()
		for _, content in pairs(tabContents) do
			content.Visible = false
		end
		tabContents[name].Visible = true
		
		for _, tabBtn in pairs(tabs) do
			tabBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 70)
		end
		btn.BackgroundColor3 = Color3.fromRGB(45, 160, 95)
	end)
end

-- Ativar a primeira aba
tabContents["Principal"].Visible = true
tabs["Principal"].BackgroundColor3 = Color3.fromRGB(45, 160, 95)

-- Adicionar conteúdo às abas

-- Aba Principal
do
	local mainTab = tabContents["Principal"]
	
	createButton("TP para Assassino", mainTab, function()
		local target = findFirstByNames(workspace, {"Assassino", "Killer", "Inimigo"})
		if target then
			safeTP(target)
			toast("Teleportado para o assassino!")
		else
			toast("Não encontrou o assassino!")
		end
	end)
	
	createButton("TP para Saída", mainTab, function()
		local exit = findFirstByNames(workspace, {"Saida", "Exit", "Escapar"})
		if exit then
			safeTP(exit)
			toast("Teleportado para a saída!")
		else
			toast("Não encontrou a saída!")
		end
	end)
	
	createButton("TP para Reviver", mainTab, function()
		local revive = findFirstByNames(workspace, {"Reviver", "Revive", "Cura"})
		if revive then
			safeTP(revive)
			toast("Teleportado para o reviver!")
		else
			toast("Não encontrou o reviver!")
		end
	end)
	
	local fovSlider = createSlider("Campo de Visão", mainTab, 50, 120, 70, function(value)
		cam.FieldOfView = value
	end)
	
	local espToggle = createToggle("ESP de Jogadores", mainTab, function(state)
		-- Implementar ESP aqui
		toast(state and "ESP ativado!" or "ESP desativado!")
	end)
	
	local noclipToggle = createToggle("Noclip", mainTab, function(state)
		-- Implementar Noclip aqui
		toast(state and "Noclip ativado!" or "Noclip desativado!")
	end)
	
	local flyToggle = createToggle("Fly (Tecla F)", mainTab, function(state)
		-- Implementar Fly aqui
		toast(state and "Fly ativado! Pressione F" or "Fly desativado!")
	end)
end

-- Aba Jogador
do
	local playerTab = tabContents["Jogador"]
	
	local wsSlider = createSlider("Velocidade", playerTab, 16, 100, 16, function(value)
		local humanoid = getHumanoid()
		if humanoid then
			humanoid.WalkSpeed = value
		end
	end)
	
	local jpSlider = createSlider("Força do Pulo", playerTab, 50, 200, 50, function(value)
		local humanoid = getHumanoid()
		if humanoid then
			humanoid.JumpPower = value
		end
	end)
	
	local infJumpToggle = createToggle("Pulo Infinito", playerTab, function(state)
		-- Implementar pulo infinito aqui
		toast(state and "Pulo infinito ativado!" or "Pulo infinito desativado!")
	end)
	
	local antiAfkToggle = createToggle("Anti-AFK", playerTab, function(state)
		if state then
			connections.antiAfk = lp.Idled:Connect(function()
				game:GetService("VirtualUser"):CaptureController()
				game:GetService("VirtualUser"):ClickButton2(Vector2.new())
			end)
			toast("Anti-AFK ativado!")
		else
			if connections.antiAfk then
				connections.antiAfk:Disconnect()
				connections.antiAfk = nil
				toast("Anti-AFK desativado!")
			end
		end
	end)
end

-- Aba Visual
do
	local visualTab = tabContents["Visual"]
	
	local fullbrightToggle = createToggle("FullBright", visualTab, function(state)
		if state then
			Lighting.Brightness = 2
			Lighting.ClockTime = 14
			Lighting.FogEnd = 100000
			Lighting.GlobalShadows = false
			toast("FullBright ativado!")
		else
			Lighting.Brightness = 1
			Lighting.ClockTime = 12
			Lighting.FogEnd = 1000
			Lighting.GlobalShadows = true
			toast("FullBright desativado!")
		end
	end)
	
	local nofogToggle = createToggle("Sem Neblina", visualTab, function(state)
		Lighting.FogEnd = state and 100000 or 1000
		toast(state and "Neblina removida!" or "Neblina restaurada!")
	end)
	
	local chamsToggle = createToggle("Chams (X-Ray)", visualTab, function(state)
		-- Implementar Chams aqui
		toast(state and "Chams ativado!" or "Chams desativado!")
	end)
end

-- Aba Créditos
do
	local creditsTab = tabContents["Créditos"]
	
	local creditFrame = Instance.new("Frame", creditsTab)
	creditFrame.Size = UDim2.new(1, 0, 0, 150)
	creditFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
	creditFrame.BorderSizePixel = 0
	
	local corner = Instance.new("UICorner", creditFrame)
	corner.CornerRadius = UDim.new(0, 8)
	
	local image = Instance.new("ImageLabel", creditFrame)
	image.Size = UDim2.new(0, 100, 0, 100)
	image.Position = UDim2.new(0.5, -50, 0, 10)
	image.BackgroundTransparency = 1
	image.Image = IMGUR_LINK
	
	local creditText = Instance.new("TextLabel", creditFrame)
	creditText.Size = UDim2.new(1, -20, 0, 30)
	creditText.Position = UDim2.new(0, 10, 0, 120)
	creditText.BackgroundTransparency = 1
	creditText.Text = "APEXWARE 2.0\nBy Vipcoringa"
	creditText.Font = Enum.Font.GothamBold
	creditText.TextSize = 14
	creditText.TextColor3 = Color3.fromRGB(235, 235, 240)
	creditText.TextYAlignment = Enum.TextYAlignment.Top
end

-- Ajustar tamanho do conteúdo
contentFrame:GetPropertyChangedSignal("AbsoluteSize"):Connect(function()
	for _, tab in pairs(tabContents) do
		tab.Size = UDim2.new(1, 0, 0, tab.UIListLayout.AbsoluteContentSize.Y)
	end
	contentFrame.CanvasSize = UDim2.new(0, 0, 0, contentFrame.UIListLayout.AbsoluteContentSize.Y)
end)

-- Mensagem inicial
toast("APEXWARE 2.0 carregado! Clique na bolinha para abrir.", 3)

-- Fechar conexões quando o script for destruído
gui.Destroying:Connect(function()
	for _, conn in pairs(connections) do
		conn:Disconnect()
	end
end)
